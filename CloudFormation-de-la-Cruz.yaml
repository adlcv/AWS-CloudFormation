AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template for S3 bucket, VPC, and IAM Role"

Resources:
  # S3 Bucket
  MyS3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "my-test-bucket-for-cf"
      VersioningConfiguration:
        Status: Enabled

  # VPC
  MyVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: MyVPC

  # Subnet p√∫blica
  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: "us-east-1a" ######
      CidrBlock: "10.0.1.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet

  # Internet Gateway
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"

  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  # IAM Role
  MyIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:ListBucket"
                Resource:
                  - !GetAtt MyS3Bucket.Arn
                  - !Join ["", [!GetAtt MyS3Bucket.Arn, "/*"]]

Outputs:
  S3BucketName:
    Description: "S3 Bucket Name"
    Value: !Ref MyS3Bucket
  VPCId:
    Description: "VPC ID"
    Value: !Ref MyVPC
  IAMRoleName:
    Description: "IAM Role Name"
    Value: !Ref MyIAMRole
